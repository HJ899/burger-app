{"version":3,"sources":["components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/order.js","store/actions/actionTypes.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","shared/utility.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js","components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Navigation/Toolbar/Toolbar.css","components/UI/Input/Input.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","hoc/Layout/Layout.css","assets/images/127 burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","containers/Auth/Auth.css"],"names":["logo","props","react_default","a","createElement","className","classes","Logo","src","BurgerLogo","alt","navigationItem","NavigationItem","NavLink","to","link","activeClassName","active","exact","children","navigationItems","NavigationItems","NavigationItem_NavigationItem","isAuth","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","DrawerToggle_DrawerToggle","drawerToggleClicked","Logo_Logo","DesktopOnly","NavigationItems_NavigationItems","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Fragment","Backdrop_Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","this","isAuthenticated","SideDrawer_SideDrawer","Content","Component","connect","auth","token","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","type","buildControls","BuildControls","price","toFixed","map","ctrl","BuildControl_BuildControl","key","ingredientAdded","bind","ingredientRemoved","disabledInfo","OrderButton","purchasable","ordered","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","reduce","arr","el","concat","length","Burger","Modal","nextProps","nextState","style","transform","opacity","button","Button","btnType","orderSummary","ingredientSummary","textTransform","Button_Button","canceled","continue","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","UI_Modal_Modal","message","eject","purchaseBurgerStart","authSuccess","idToken","userId","logout","localStorage","removeItem","checkAuthTimeOut","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","loading","checkPurchasableHandler","objectSpread","ing","sum","purchasingHandler","onSetAuthRedirectPath","history","push","cancelPurchasingHandler","continuePurchasingHandler","onInitPurchase","building","authRedirectPath","replace","initIngredients","Spinner_Spinner","Burger_Burger","BuildControls_BuildControls","onIngredientAdded","onIngredientDeleted","totalPrice","OrderSummary","burgerBuilder","ingredientName","actionCreators","get","then","data","catch","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinue","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","assign","elementConfig","onChange","changed","options","op","displayValue","Input","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","ContactData","orderForm","name","placeholder","validation","valid","street","zipcode","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ings","onOrderHandler","inputIdentifier","updatedFormElement","target","updatedOrderForm","defineProperty","inp","formElementsArray","id","config","form","onSubmit","ele","Input_Input","inputChangedHandler","orderData","post","orderId","purchaseBurgerSuccess","Checkout","checkoutCancelledHandler","checkoutContinueHandler","summary","Redirect","purchased","CheckoutSummary_CheckoutSummary","Route","match","component","actions","amount","ingredientOutput","ig","Order","Orders","onFetchOrders","orders","Order_Order","queryParams","fetchedOrders","Auth","password","isSignUp","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","errorMessage","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignin","routes","Switch","hoc_Layout_Layout","withRouter","getItem","Boolean","window","location","hostname","INGREDIENT_PRICES","salad","cheese","meat","bacon","initialState","reducer","undefined","action","addIngredient","removeIngredient","setIngredients","fetchIngredientsFailed","purchaseInit","newOrder","purchaseBurgerFail","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","enable","Success","Danger","__webpack_require__","p","load2"],"mappings":"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","file":"static/js/main.dbec756d.chunk.js","sourcesContent":["import React from 'react';\nimport BurgerLogo from '../../assets/images/127 burger-logo.png';\nimport classes from './Logo.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo}>\n        <img src={BurgerLogo} alt=\"BurgerApp\"></img>\n    </div>\n)\n\nexport default logo;","import React from 'react';\nimport classes from './NavigationItem.css';\n\nimport { NavLink } from 'react-router-dom';\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link}\n            activeClassName={classes.active} exact={props.exact}>{props.children}</NavLink>\n    </li>\n)\n\nexport default navigationItem;","import React from 'react';\nimport classes from './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className = {classes.NavigationItems}>\n        <NavigationItem link='/' exact>Burger Builder</NavigationItem>\n        { !props.isAuth ? \n            <NavigationItem link='/auth'>Authenticate</NavigationItem>:\n            [<NavigationItem link='/orders'>Orders</NavigationItem>,\n            <NavigationItem link='/logout'>Logout</NavigationItem>] }\n        \n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div className = {classes.DrawerToggle}onClick = {props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport classes from './Toolbar.css';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked = {props.drawerToggleClicked}/>\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuth = {props.isAuth}/>\n        </nav>\n    </header>\n)\n\nexport default toolbar;","import React from 'react';\n\nimport classes from './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop}\n                        onClick={props.clicked}></div> : null\n)\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.css'; \nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n\n    if(props.open){\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n\n\n    return (\n        <React.Fragment>\n            <Backdrop show={props.open} clicked={props.closed} />\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuth = {props.isAuth} />\n                </nav>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default sideDrawer;","import React , { Component } from 'react';\nimport classes from './Layout.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nimport { connect } from 'react-redux'\n\nclass Layout extends Component{\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false});\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState(prevState => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        });\n    }\n\n    render(){\n        return (\n        <React.Fragment>\n            <Toolbar \n                isAuth = {this.props.isAuthenticated}   \n                drawerToggleClicked = {this.sideDrawerToggleHandler}/>\n            <SideDrawer \n                isAuth = {this.props.isAuthenticated}\n                open={this.state.showSideDrawer} \n                closed = {this.sideDrawerClosedHandler}/>\n            <main className={classes.Content}>\n                {this.props.children}\n            </main>\n        </React.Fragment>\n        );\n    }    \n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\nimport classes from './BuildControl.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\n        <button className={classes.More} onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\nimport classes from './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    {label: 'Salad' , type: 'salad'},\n    {label: 'Bacon' , type: 'bacon'},\n    {label: 'Cheese' , type: 'cheese'},\n    {label: 'Meat' , type: 'meat'}\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added= {props.ingredientAdded.bind(this, ctrl.type)}\n                removed= {props.ingredientRemoved.bind(this, ctrl.type)}\n                disabled = {props.disabledInfo[ctrl.type]} />\n        ))}\n        <button \n            className={classes.OrderButton} \n            disabled={!props.purchasable}\n            onClick={props.ordered}>{props.isAuth?'ORDER NOW':'SIGN UP TO ORDER'}</button>\n    </div>\n)\n\nexport default buildControls;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './BurgerIngredient.css';\nclass BurgerIngredient extends Component{\n    \n    render(){\n        let ingredient = null;\n        \n        switch(this.props.type){\n            case('bread-bottom'):\n                ingredient = <div className = {classes.BreadBottom}></div>;\n                break;\n            case('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case('meat'):\n                ingredient = <div className = {classes.Meat}></div>;\n                break;\n            case('cheese'):\n                ingredient = <div className = {classes.Cheese}></div>;\n                break;\n            case('salad'):\n                ingredient = <div className = {classes.Salad}></div>;\n                break;\n            case('bacon'):\n                ingredient = <div className = {classes.Bacon}></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n\n        return ingredient;\n    }\n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\nimport classes from './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys( props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_ , i) => {\n                return <BurgerIngredient key = {igKey + i} type={igKey}/>\n            })\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el);\n        }, []);\n    \n    if(transformedIngredients.length === 0){\n        transformedIngredients = <p>Please start adding ingredients!</p>\n    }\n    \n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\"/>\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n    )\n};\n\nexport default burger;","import React , { Component }from 'react';\nimport classes from './Modal.css';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component{\n    shouldComponentUpdate(nextProps, nextState){\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n    render(){\n        return (\n            <React.Fragment>\n                <Backdrop show={this.props.show} \n                        clicked={this.props.clicked}/>\n                <div \n                    className={classes.Modal}\n                    style = {{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-200%)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </React.Fragment>   \n        )\n    }\n}\n\nexport default Modal;","import React from 'react';\n\nimport classes from './Button.css';\n\nconst button = (props) => (\n    <button\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}\n        disabled={props.disabled}>\n            {props.children}\n    </button>\n)\n\nexport default button;\n","import React from 'react';\nimport Button from '../../UI/Button/Button';\n\nconst orderSummary = (props) => {\n    const ingredientSummary = Object.keys(props.ingredients)\n                                .map(igKey => (\n                                    <li key={igKey}>\n                                        <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\n                                    </li>\n                                ))\n    return (\n        <React.Fragment>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total Price : {props.price.toFixed(2)}</strong></p>\n            <p>Continue to Checkout?</p>\n            <Button btnType=\"Danger\" clicked={props.canceled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.continue}>CONTINUE</Button>\n        </React.Fragment>\n    )\n};\n\nexport default orderSummary","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://burger-app-1b0b1.firebaseio.com/\"\n});\n\nexport default instance;","import React from 'react';\nimport classes from './Spinner.css';\n\nconst spinner = props => <div className={classes.Loader}>Loading...</div>;\n\nexport default spinner;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent , axios) => {\n    return class extends Component{\n        state = {\n            error: null\n        }\n        componentWillMount(){\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n\n            this.resInterceptor = axios.interceptors.response.use(res => res, err => {\n                this.setState({error: err});\n            })\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});   \n        }\n\n        render(){\n            return (\n                <React.Fragment>\n                    <Modal show={this.state.error}\n                           clicked={this.errorConfirmedHandler}>\n                        {this.state.error? this.state.error.message: null};\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </React.Fragment>\n            )\n        }\n\n        componentWillUnmount(){\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n    }\n};\n\nexport default withErrorHandler;","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData\n    }\n}\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error\n    }\n}\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders.json?auth=' + token, orderData)\n        .then(response => {\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData))\n        })\n        .catch(err => dispatch(purchaseBurgerFail(err)));\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders\n    }\n}\n\nexport const fetchOrdersFailed = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    }\n}\n\nexport const fetchOrders = (token, userId) => {\n    return (dispatch) => {\n        dispatch(fetchOrdersStart());   \n        const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`\n        axios.get('/orders.json' + queryParams)\n            .then(res => {\n                const fetchedOrders = [];\n                for(let key in res.data){\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            })\n            .catch(err => dispatch(fetchOrdersFailed(err))); \n    }\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\n\n","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (idToken, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken,\n        userId \n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeOut = (expirationTime) => dispatch => {\n    setTimeout(() => {\n        dispatch(logout())\n    }, expirationTime * 1000);\n}\n\nexport const auth = (email, password, isSignUp) => dispatch => {\n    dispatch(authStart());\n    const authData = {\n        email,\n        password,\n        returnSecureToken: true\n    }\n    let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=';\n    if(!isSignUp){\n        url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key='\n    }\n    const apiKey = \"AIzaSyDnFhBU9hxI451wo47X5Z5qg5EIzIzdi7g\";\n    url += apiKey\n    axios.post(url, authData)\n        .then(response => {\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n            localStorage.setItem('token', response.data.idToken);\n            localStorage.setItem('expirationDate', expirationDate);\n            localStorage.setItem('userId', response.data.userId);\n            dispatch(authSuccess(response.data.idToken, response.data.localId))\n            dispatch(checkAuthTimeOut(response.data.expiresIn));\n        })\n        .catch(err => dispatch(authFail(err.response.data.error)));\n\n}\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path \n    }\n}\n\nexport const authCheckState = () => dispatch => {\n    const token = localStorage.getItem('token');\n    if(!token){\n        dispatch(logout())\n    }\n    else{\n        const expirationDate = new Date(localStorage.getItem('expirationDate'));\n        if(expirationDate <= new Date()) {\n            dispatch(logout())\n        }\n        else{\n            const userId = localStorage.getItem('userId');\n            dispatch(authSuccess(token, userId));\n            dispatch(checkAuthTimeOut((expirationDate.getTime() - new Date().getTime())/1000));\n        }\n    }\n}","import React , { Component } from 'react';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Burger from '../../components/Burger/Burger';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../store/actions'\n\nclass BurgerBuilder extends Component {\n    state = {\n        purchasing: false,\n        loading: false,\n        error: false\n    }\n\n    componentDidMount () {\n        if(this.props.isAuthenticated && this.props.building && this.props.authRedirectPath !== '/'){\n            this.props.history.replace('/checkout');\n        }\n        else\n            this.props.initIngredients();\n    }\n\n    checkPurchasableHandler = () => {\n        const ingredients = {...this.props.ing};\n        const sum = Object.keys(ingredients)\n                            .map(igKey => ingredients[igKey])\n                            .reduce((sum,el) => sum + el , 0);\n        return sum > 0;\n    }\n\n    purchasingHandler = () => {\n        if(this.props.isAuthenticated)\n            this.setState({purchasing: true});\n        else{\n            this.props.onSetAuthRedirectPath('/checkout');\n            this.props.history.push('/auth');\n        }\n    }\n\n    cancelPurchasingHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    continuePurchasingHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n    render(){\n\n        let disabledInfo = {\n            ...this.props.ing\n        }\n\n        for(let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n\n        let burger = this.props.error? <p>Ingredients can't be loaded!</p> : <Spinner />;\n        let orderSummary = null;\n        if( this.props.ing){\n            burger = (\n                <React.Fragment>\n                    <Burger ingredients={ this.props.ing}/>\n                    <BuildControls\n                        ingredientAdded = {this.props.onIngredientAdded}\n                        ingredientRemoved = {this.props.onIngredientDeleted}\n                        disabledInfo = {disabledInfo}\n                        price = {this.props.totalPrice}\n                        isAuth = {this.props.isAuthenticated}\n                        purchasable = {this.checkPurchasableHandler()}\n                        ordered = {this.purchasingHandler} />\n                </React.Fragment>\n            )\n            orderSummary = (\n                <OrderSummary \n                    ingredients = { this.props.ing}\n                    canceled = {this.cancelPurchasingHandler}\n                    continue = {this.continuePurchasingHandler}\n                    price = {this.props.totalPrice} />\n            );\n        }\n\n        if(this.state.loading){\n            orderSummary = <Spinner />\n        }\n\n        return (\n            <React.Fragment>\n                <Modal show={this.state.purchasing}\n                       clicked = {this.cancelPurchasingHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ing: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null,\n        building: state.burgerBuilder.building,\n        authRedirectPath: state.auth.authRedirectPath\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingredientName) => \n                    dispatch(actionCreators.addIngredient(ingredientName)),\n        onIngredientDeleted: (ingredientName) => \n                    dispatch(actionCreators.removeIngredient(ingredientName)),\n        initIngredients: () => dispatch(actionCreators.initIngredients()),\n        onInitPurchase: () => dispatch(actionCreators.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actionCreators.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (ingredientName) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT, \n        ingredientName: ingredientName\n    };\n}\n\nexport const removeIngredient = (ingredientName) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT, \n        ingredientName: ingredientName\n    }\n}\n\nexport const setIngredients = (ingredients) => {\n    return{\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n}\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n}\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('https://burger-app-1b0b1.firebaseio.com/ingredients.json').then(response => {\n            dispatch(setIngredients(response.data));\n        }).catch(error => dispatch(fetchIngredientsFailed   ()));\n    }\n}","import React from 'react';\nimport classes from './CheckoutSummary.css';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%',  margin: 'auto'}}>\n                <Burger ingredients = {props.ingredients}/>\n            </div>\n            <Button \n                btnType = 'Danger'\n                clicked = {props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType = 'Success'\n                clicked = {props.checkoutContinue}>CONTINUE</Button>\n        </div>\n    )\n};\n\nexport default checkoutSummary;","import React from 'react';\nimport classes from './Input.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    let inputClasses = [classes.InputElement];\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid); \n    }\n\n    switch(props.elementType){\n        case('input'):\n            inputElement = <input className={ inputClasses.join(' ') }\n                            {...props.elementConfig} \n                            value={props.value}\n                            onChange={props.changed} />;\n            break;\n        case('textarea'):\n            inputElement = <textarea className={ inputClasses.join(' ') }\n                            {...props.elementConfig} \n                            value={props.value}\n                            onChange={props.changed} />;\n            break;\n        case('select'):\n            inputElement = (\n                            <select \n                                className={ inputClasses.join(' ') }\n                                value={props.value}\n                                onChange={props.changed}>\n                                    {props.elementConfig.options.map(op => (\n                                        <option \n                                            value={op.value}\n                                            key={op.value}>\n                                            {op.displayValue}\n                                        </option>\n                                    ))}\n                            </select>\n                        );\n            break;\n        default: \n            inputElement = <input className={ inputClasses.join(' ') }\n                            {...props.elementConfig} \n                            value={props.value}\n                            onChange={props.changed}/>\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n};\n\nexport default input;","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if(rules.required){\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if(rules.minLength){\n        isValid = value.trim().length >= rules.minLength && isValid;\n    }\n\n    if(rules.maxLength){\n        isValid = value.trim().length <= rules.maxLength && isValid;\n    }\n\n    if(rules.isEmail){\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\n        isValid = pattern.test(value) && isValid;\n    }\n\n    if(rules.isNumeric){\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n}","import React , { Component } from 'react';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport { connect } from 'react-redux';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actionCreators from '../../../store/actions';\nimport { updateObject, checkValidity } from '../../../shared/utility'\n\n\nclass ContactData extends Component{\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your name',\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street:{\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street',\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipcode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP code',\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country',\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-mail',\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest' , displayValue: 'Fastest'},\n                        {value: 'cheapest' , displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                valid: true,\n                validation: {}\n            }\n        },\n        formIsValid: false\n    }\n\n\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        const formData = {};\n        for(let formElementIdentifier in this.state.orderForm){\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        } \n        const order = {\n            ingredients: this.props.ings,\n            price : this.props.totalPrice,\n            order: formData,\n            userId: this.props.userId\n        }\n        this.props.onOrderHandler(order, this.props.token);\n    }\n\n    inputChangedHandler(event, inputIdentifier){\n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\n            value: event.target.value,\n            touched: true,\n            valid: checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation)\n        });\n        const updatedOrderForm = updateObject(this.state.orderForm, { [inputIdentifier]: updatedFormElement });\n        let formIsValid = true;\n        for(let inp in updatedOrderForm){\n            formIsValid = formIsValid && updatedOrderForm[inp].valid;\n        }\n        this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\n    }\n\n    render(){\n\n        const formElementsArray = [];\n        for(let key in this.state.orderForm){\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(ele => (\n                    <Input \n                        key={ele.id}\n                        elementType={ele.config.elementType} \n                        elementConfig={ele.config.elementConfig}\n                        value={ele.config.value}\n                        invalid = {!ele.config.valid}   \n                        shouldValidate = {ele.config.validation}\n                        touched = {ele.config.touched}\n                        changed = {(event) => this.inputChangedHandler(event, ele.id)} />\n                ))}\n                <Button btnType = 'Success' disabled={!this.state.formIsValid}>ORDER NOW</Button>\n            </form>\n        );\n        if(this.props.loading){\n            form = <Spinner />\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderHandler : (orderData, token) => dispatch(actionCreators.purchaseBurger(orderData, token))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\nimport { Route, Redirect} from 'react-router-dom';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\n\nclass Checkout extends Component{\n\n    checkoutCancelledHandler = () => {\n        this.props.setAuthRedirectPath();\n        this.props.history.replace('/');\n    }\n\n    checkoutContinueHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render(){\n        let summary = <Redirect to='/'/>\n        if(this.props.ings){\n            if(this.props.purchased) return summary\n            summary = (\n                <div>\n                    <CheckoutSummary \n                        ingredients = {this.props.ings}\n                        checkoutCancelled = {this.checkoutCancelledHandler}\n                        checkoutContinue = {this.checkoutContinueHandler}/>\n                    <Route path={this.props.match.path + '/contact-data'}\n                           component={ContactData}/>\n                </div>\n            )\n        }\n        return summary;\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","import React from 'react';\nimport classes from './Order.css';\n\nconst order = (props) => {\n    const ingredients = [];\n\n    for(let ingredient in props.ingredients){\n        ingredients.push({\n            name: ingredient,\n            amount: props.ingredients[ingredient]\n        })\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span key={ig.name}>{ig.name} ({ig.amount})</span>\n    })\n\n    return(\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>${props.price.toFixed(2)}</strong></p>\n        </div>\n    )\n};\n\nexport default order;","import React , { Component } from 'react';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions';\nimport { connect } from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component{\n    componentDidMount(){\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render(){\n        let orders = <Spinner/>\n        if(!this.props.loading){\n            orders = this.props.orders.map(order => (\n                        <Order \n                            key={order.id}\n                            ingredients = {order.ingredients}\n                            price = {order.price} />\n                    ));\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token) => dispatch(actions.fetchOrders(token))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios)); ","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport classes from './Auth.css';\nimport * as actions from '../../store/actions'\nimport { updateObject, checkValidity } from '../../shared/utility';\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-mail',\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password',\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        isSignUp: false\n    }\n\n    componentDidMount() {\n        if(!this.props.building && this.props.authRedirectPath !== '/'){\n            this.props.onSetAuthRedirectPath();\n        }\n    }\n\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = updateObject(this.state.controls, {\n            [controlName]: updateObject(this.state.controls[controlName], {\n                value: event.target.value,\n                valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            }),\n        });\n        this.setState({controls : updatedControls});\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\n    }\n\n    switchAuthModeHandler = () => {\n        this.setState(prevState => {\n            return {\n                isSignUp: !prevState.isSignUp\n            }\n        });\n    }\n\n    render () {\n        const formElementsArray = [];\n        for(let key in this.state.controls){\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            });\n        } \n\n        let form = formElementsArray.map(ele => (\n            <Input \n                key={ele.id}\n                elementType={ele.config.elementType} \n                elementConfig={ele.config.elementConfig}\n                value={ele.config.value}\n                invalid = {!ele.config.valid}   \n                shouldValidate = {ele.config.validation}\n                touched = {ele.config.touched}\n                changed = {(event) => this.inputChangedHandler(event, ele.id)}/>\n        ))\n\n        if(this.props.loading){\n            form = <Spinner />\n        }\n\n        let errorMessage = null;\n        if(this.props.error){\n            errorMessage = <p>{this.props.error.message}</p>\n        }\n\n        return (\n            <div className={classes.Auth}>\n                {errorMessage}\n                <form onSubmit = {this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\">{this.state.isSignUp? 'SIGN UP': 'SIGN IN'}</Button>\n                </form>\n                <Button \n                    clicked={this.switchAuthModeHandler}\n                    btnType='Danger'>SWITCH TO {this.state.isSignUp? 'SIGN IN' : 'SIGN UP'}</Button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        building: state.burgerBuilder.building,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth : (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../store/actions';\n\nclass Logout extends Component{\n    componentDidMount(){\n        this.props.onLogout();\n    }\n\n    render () {\n        return <Redirect to='/'/>;\n    }\n}\n\nconst matchDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null, matchDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, withRouter, Switch, Redirect} from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignin();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path='/auth' component={Auth} />\n        <Route path='/' exact component={BurgerBuilder}/>\n        <Redirect to='/' />\n      </Switch>\n    )\n    if(this.props.isAuth){\n      routes = (\n        <Switch>\n          <Route path='/checkout' component={Checkout} />\n          <Route path='/orders' component={Orders} />\n          <Route path='/logout' component={Logout} />\n          <Route path='/' exact component={BurgerBuilder}/>\n          <Redirect to='/' />\n        </Switch>\n      )\n    }\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignin: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility'\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n}\n\nconst addIngredient = (state, action) => {\n    return updateObject(state, {\n        ingredients: updateObject(state.ingredients, {\n            [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        }),\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    })\n}\n\nconst removeIngredient = (state, action) => {\n    return updateObject(state, {\n        ingredients: updateObject(state.ingredients, {\n            [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        }),\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    })\n}\n\nconst setIngredients = (state, action) => {\n    return updateObject(state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat\n        },\n        error: false,\n        totalPrice: 4,\n        building: false\n    })\n}\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject(state, {error: true});\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\n        default: return state\n    }\n}\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility'\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst purchaseInit = (state, action) => {\n    return updateObject(state, { purchased: false });\n}\n\nconst purchaseBurgerStart = (state, action) => {\n    return updateObject(state, { loading: true });\n}\n\nconst purchaseBurgerSuccess = (state, action) => {\n    const newOrder = { ...action.orderData , id: action.orderId }\n    return updateObject(state, { loading: false, orders: state.orders.concat(newOrder), purchased: true});\n}\n\nconst purchaseBurgerFail = (state, action) => {\n    return updateObject(state, {loading: false});\n}\n\nconst fetchOrdersStart = (state, action) => {\n    return updateObject(state, {loading: true});\n}\n\nconst fetchOrdersSuccess = (state, action) => {\n    return updateObject(state, { loading: false, orders: action.orders});\n}\n\nconst fetchOrdersFail = (state, action) => {\n    return updateObject(state, {loading: false});\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type){\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\n        default: return state\n    }\n}\n\nexport default reducer","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility'\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n}\n\nconst authStart = (state , action) => {\n    return updateObject(state, { loading: true });\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false\n    })\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    })\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, { token: null, userId: null})\n}\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, {authRedirectPath: action.path});\n} \n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state,action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';  \nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom--HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop--10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1--3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2--1cUso\",\"Meat\":\"BurgerIngredient__Meat--13nAN\",\"Cheese\":\"BurgerIngredient__Cheese--1FxeY\",\"Salad\":\"BurgerIngredient__Salad--1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon--3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer--21TuB\",\"Open\":\"SideDrawer__Open--1pVYR\",\"Close\":\"SideDrawer__Close--3Yv1l\",\"Logo\":\"SideDrawer__Logo--3TkPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl--1jYc3\",\"Label\":\"BuildControl__Label--33Z-p\",\"Less\":\"BuildControl__Less--377MJ\",\"More\":\"BuildControl__More--28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar--2JJW-\",\"Logo\":\"Toolbar__Logo--1efBD\",\"DesktopOnly\":\"Toolbar__DesktopOnly--WADUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input--s67N0\",\"Label\":\"Input__Label--_n-1m\",\"InputElement\":\"Input__InputElement--2-aFx\",\"Invalid\":\"Input__Invalid--1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem--23bcu\",\"active\":\"NavigationItem__active--2zJdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls--3_01f\",\"OrderButton\":\"BuildControls__OrderButton--myBwT\",\"enable\":\"BuildControls__enable--3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button--QI7b2\",\"Success\":\"Button__Success--2dHUt\",\"Danger\":\"Button__Danger--2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content--3pLYC\"};","module.exports = __webpack_public_path__ + \"static/media/127 burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo--19WaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems--_yd_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle--26to0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop--efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger--3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal--32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader--1DDwY\",\"load2\":\"Spinner__load2--1N7mg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary--1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData--1J81r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order--4yi4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth--2YUr1\"};"],"sourceRoot":""}